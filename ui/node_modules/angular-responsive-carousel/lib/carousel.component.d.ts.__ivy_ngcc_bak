import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, SimpleChanges } from '@angular/core';
import { Images } from './interfaces';
export declare class CarouselComponent implements OnDestroy {
    private elementRef;
    private ref;
    get isContainerLocked(): any;
    get slideCounter(): any;
    get previousSlideCounter(): any;
    get lapCounter(): any;
    lineUpCells(): void;
    quicklyPositionContainer(): void;
    _id: string;
    _images: Images;
    touches: any;
    carousel: any;
    landscapeMode: any;
    minTimeout: number;
    isVideoPlaying: boolean;
    _isCounter: boolean;
    _width: number;
    _cellWidth: number | '100%';
    isMoving: boolean;
    isNgContent: boolean;
    cellLength: number;
    dotsArr: any;
    get isLandscape(): boolean;
    get isSafari(): any;
    get counter(): string;
    get cellsElement(): any;
    set images(images: Images & any);
    get images(): Images & any;
    events: EventEmitter<any>;
    height: number;
    width: number;
    loop: boolean;
    autoplay: boolean;
    autoplayInterval: number;
    pauseOnHover: boolean;
    dots: boolean;
    borderRadius: number;
    margin: number;
    objectFit: 'contain' | 'cover' | 'none';
    minSwipeDistance: number;
    transitionDuration: number;
    transitionTimingFunction: 'ease' | 'ease-in' | 'ease-out' | 'ease-in-out' | 'linear';
    videoProperties: any;
    counterSeparator: string;
    overflowCellsLimit: number;
    listeners: 'auto' | 'mouse and touch';
    cellsToShow: number;
    cellsToScroll: number;
    set cellWidth(value: number | '100%');
    set isCounter(value: boolean);
    get isCounter(): boolean;
    get activeDotIndex(): number;
    arrows: boolean;
    arrowsOutside: boolean;
    arrowsTheme: 'light' | 'dark';
    get cellLimit(): any;
    hostClassCarousel: boolean;
    hostStyleHeight: string;
    hostStyleWidth: string;
    onWindowResize(event: any): void;
    onMousemove(event: MouseEvent): void;
    onMouseleave(event: MouseEvent): void;
    constructor(elementRef: ElementRef, ref: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    initCarousel(): void;
    detectDomChanges(): void;
    onDomChanges(): void;
    setDimensions(): void;
    getFile(index: any): any;
    handleTouchstart: (event: any) => void;
    handleHorizontalSwipe: (event: any) => void;
    handleTouchend: (event: any) => void;
    handleTransitionendCellContainer(event: any): void;
    toggleVideo(video: any): void;
    getCurrentIndex(): any;
    getCellWidth(): any;
    next(): void;
    prev(): void;
    select(index: number): void;
    isNextArrowDisabled(): any;
    isPrevArrowDisabled(): any;
    getCellLength(): any;
}
